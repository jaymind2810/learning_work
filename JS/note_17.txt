========================Objects and Timing Event====================================
==> Object is collection of properties.
==> In JS Object is key Value Pair.
    object define as

    var student = {}
        or
    var student = new object();
    console.log(student)
        --object

    
    var student = {
        name = "Jaymin",
        rollno = 62
        marks = 82
    }
    console.log(student.name);
    student['name']
        -- Jaymin

    student.marks = 85;
    student['name']

==> Delete object property

delete object.properties
    delete student.marks
        -- marks are deleted
    
==> How Object are Stored:=
    var obj = {
        "p1" : 10
    }
    var obj2 = obj
    obj2
        -- {"p1": 10}
    obj2.p1 = 100;
    obj
        --{"p1": 100}
    obj == obj2
        --true  ["Here, there is no any object create. Same Address is used for obj2"]
    obj === obj2
        --true

    obj2 = {"p1": 10}
    obj == obj2
        --false ["Here, New Address is created so this is make flse for result."]

    

==> Iterating Over Objects.

    for(var prop in student){
        console.log(prop, student[prop]);
    }


==> Nested Objects:=
    var student = {
        "name": "Jaymin",
        roll_no : 2,
        marks: 90,
        address: {
            city: "Ahmedabad",
            pincode: "3203433"
        }
    }

    student.address
        --  address: {
                city: "Ahmedabad",
                pincode: "3203433"
            }
    student.address.city
        -- Ahmedabad


==> Array and Objects:=
    -- Array is one type of object.

    var arr = [1,3,5,6,7]
    console.log(arr[1])
        -- 3
    arr.length
        -- 5

=========================================>>
=====> Time Out Functions:=====

==> setTimeout();
-- set timeout function works only One time after some passed time.

function sayHello(){
    console.log("HELLO");
}
setTimeout(sayHello, 2000)
    -- HELLO [Here, print hello after 2 seconds.]


==> setInterval();
-- set interval and run again and again..
-- stop using clearInterval() function calling after some time.
-- All setInterval function always return id so we can stop after some time.

    var sec = 1
    function sayHello(){
        console.log("After ", sec);
        sec++
        if(sec == 6){
            clearInterval(id)
        }
    }
    var id = setInterval(sayHello, 2000)

-- Here, In above sayHello function run in interval of 2 seconds and it is run 5 time and than after close.

